//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/MoveAmbulance.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MoveAmbulance : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MoveAmbulance()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MoveAmbulance"",
    ""maps"": [
        {
            ""name"": ""AmbulanceMove"",
            ""id"": ""55fcbdda-c23e-41c0-b545-c588e807c322"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""bfdbd6a1-106b-4ac7-a8f4-23f5d095a386"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""96967f6b-1520-4480-ab96-1c1a0f018ec6"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""26da2399-87e0-4ae6-b0ac-2749c143544b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eb05838f-b97f-4623-ade7-f09b0399e452"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""36bb91ab-c9c5-4c82-8507-1ba9157d4af9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9ee6db27-ca10-4ebd-aa7a-b7f6bbadba4c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""978c2cf0-ba4c-4bf5-9c57-99b8d4e63f22"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e2024899-38a6-4b5a-b975-e34210dfa0c8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ccc0b9bf-5da1-4ae8-a862-770587f0fa10"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""316ed821-ba15-4a89-aa9e-fdc79043475c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e8e5e988-ff83-4af4-b0de-8a8690bf5770"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6a5aa810-3544-444e-b528-f716daed38e1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // AmbulanceMove
        m_AmbulanceMove = asset.FindActionMap("AmbulanceMove", throwIfNotFound: true);
        m_AmbulanceMove_Move = m_AmbulanceMove.FindAction("Move", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // AmbulanceMove
    private readonly InputActionMap m_AmbulanceMove;
    private IAmbulanceMoveActions m_AmbulanceMoveActionsCallbackInterface;
    private readonly InputAction m_AmbulanceMove_Move;
    public struct AmbulanceMoveActions
    {
        private @MoveAmbulance m_Wrapper;
        public AmbulanceMoveActions(@MoveAmbulance wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_AmbulanceMove_Move;
        public InputActionMap Get() { return m_Wrapper.m_AmbulanceMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AmbulanceMoveActions set) { return set.Get(); }
        public void SetCallbacks(IAmbulanceMoveActions instance)
        {
            if (m_Wrapper.m_AmbulanceMoveActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_AmbulanceMoveActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_AmbulanceMoveActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_AmbulanceMoveActionsCallbackInterface.OnMove;
            }
            m_Wrapper.m_AmbulanceMoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
            }
        }
    }
    public AmbulanceMoveActions @AmbulanceMove => new AmbulanceMoveActions(this);
    public interface IAmbulanceMoveActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
}
